import{j as e,f as I,B as J,C as D,p as ye}from"./ethereum-Dpu0wFLT.js";import{a as s}from"./vendor-BVRmVL55.js";const Pe=[{inputs:[{internalType:"address",name:"initialOwner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"uint256",name:"cardId",type:"uint256"},{indexed:!1,internalType:"string",name:"uri",type:"string"}],name:"CardMinted",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"string",name:"uri",type:"string"},{internalType:"uint8",name:"hp",type:"uint8"},{internalType:"uint8",name:"attack",type:"uint8"},{internalType:"uint8",name:"defense",type:"uint8"},{internalType:"uint8",name:"speed",type:"uint8"},{internalType:"uint8",name:"special",type:"uint8"},{internalType:"uint8",name:"pokemonType",type:"uint8"}],name:"mintCard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getPokemonStats",outputs:[{components:[{internalType:"uint8",name:"hp",type:"uint8"},{internalType:"uint8",name:"attack",type:"uint8"},{internalType:"uint8",name:"defense",type:"uint8"},{internalType:"uint8",name:"speed",type:"uint8"},{internalType:"uint8",name:"special",type:"uint8"},{internalType:"uint8",name:"pokemonType",type:"uint8"}],internalType:"struct PokemonCardCreation.PokemonMetadata",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"cardIdCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}],Ee=[{inputs:[{internalType:"address",name:"_nftContract",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"listings",outputs:[{components:[{internalType:"address",name:"seller",type:"address"},{internalType:"uint256",name:"price",type:"uint256"},{internalType:"bool",name:"isAuction",type:"bool"},{internalType:"bool",name:"isActive",type:"bool"}],internalType:"struct PokemonCardTrading.Listing",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"auctions",outputs:[{components:[{internalType:"uint256",name:"askingPrice",type:"uint256"},{internalType:"uint256",name:"highestBid",type:"uint256"},{internalType:"address",name:"highestBidder",type:"address"},{internalType:"uint256",name:"endTime",type:"uint256"}],internalType:"struct PokemonCardTrading.Auction",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"}],name:"listCard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"startingBid",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"startAuction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"placeBid",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"cancelFixedPriceListing",outputs:[],stateMutability:"nonpayable",type:"function"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"seller",type:"address"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"bool",name:"isAuction",type:"bool"}],name:"CardListed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"buyer",type:"address"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"SaleCompleted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"bidder",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"AuctionBid",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"winner",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"AuctionEnded",type:"event"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"finalizeAuction",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"buyCard",outputs:[],stateMutability:"payable",type:"function"}],S={NFT_CONTRACT:"0x9550C786877ECdfbEb4dE17b9644B5b47B1BF1aF",TRADING_CONTRACT:"0x6a8e1C4558F395E00A2dc0439A097B293355F546"},$e="https://api.pinata.cloud",$={NFT_CONTRACT:Pe,TRADING_CONTRACT:Ee};function he({hash:o,alt:n,className:i,style:C}){const[f,m]=s.useState(!1),r=`https://gateway.pinata.cloud/ipfs/${o}`,c=`https://ipfs.io/ipfs/${o}`,T=()=>{f||m(!0)};return e.jsx("img",{src:f?c:r,alt:n,className:i,style:C,onError:T,onLoad:()=>m(!1)})}const fe=s.createContext(void 0);function ze({children:o}){const[n,i]=s.useState(()=>{const c=localStorage.getItem("cart");return c?JSON.parse(c):[]});s.useEffect(()=>{localStorage.setItem("cart",JSON.stringify(n))},[n]);const C=c=>{i(T=>T.find(y=>y.id===c.id)?T.map(y=>y.id===c.id?{...y,quantity:y.quantity+1}:y):[...T,c])},f=c=>{i(T=>T.filter(F=>F.id!==c))},m=(c,T)=>{i(F=>F.map(y=>y.id===c?{...y,quantity:T}:y))},r=()=>{i([])};return e.jsx(fe.Provider,{value:{cartItems:n,addToCart:C,removeFromCart:f,updateQuantity:m,clearCart:r},children:o})}function Te(){const o=s.useContext(fe);if(o===void 0)throw new Error("useCart must be used within a CartProvider");return o}function ge({message:o,isVisible:n,onHide:i,type:C="success"}){return s.useEffect(()=>{if(n){const f=setTimeout(()=>{i()},2e3);return()=>clearTimeout(f)}},[n,i]),e.jsx("div",{className:`toast ${n?"show":""} ${C}`,children:e.jsxs("div",{className:"toast-content",children:[e.jsx("i",{className:`fas ${C==="success"?"fa-check-circle":"fa-times-circle"}`}),e.jsx("span",{children:o})]})})}function Ge({ipfsHash:o,metadata:n,onClose:i,onCartOpen:C,price:f,seller:m,tokenId:r,account:c}){var pe,me;const{addToCart:T,cartItems:F,removeFromCart:y}=Te(),[M,H]=s.useState(""),[W,z]=s.useState(!1),[w,K]=s.useState(!1),[P,Q]=s.useState(0),[X,a]=s.useState(""),[b,V]=s.useState([]),[l,u]=s.useState(!1),[j,x]=s.useState(""),[Z,v]=s.useState("success"),[B,N]=s.useState(!1),[ee,q]=s.useState(!1),[g,Y]=s.useState(!1),[O,G]=s.useState(!1),[te,ie]=s.useState(!1),[U,re]=s.useState(!1),[xe,oe]=s.useState(!1),[h,Ne]=s.useState(null),[Me,ce]=s.useState(!1);s.useEffect(()=>{(async()=>{var A;if(!(!window.ethereum||!r))try{const p=new J(window.ethereum),R=await(await p.getSigner()).getAddress(),L=new D(S.TRADING_CONTRACT,$.TRADING_CONTRACT,p),E=await L.listings(r);if(z(E.isActive),K(E.isAuction),u(((A=E.seller)==null?void 0:A.toLowerCase())===R.toLowerCase()),E.isAuction){const k=await L.auctions(r);Q(Number(k.endTime));const Ie=L.filters.AuctionBid(r),Se=(await L.queryFilter(Ie)).filter(_=>"args"in _).map(async _=>{const ae=await _.getBlock();return{bidder:_.args[1],amount:_.args[2],timestamp:ae.timestamp}}),Fe=await Promise.all(Se);V(Fe.sort((_,ae)=>ae.timestamp-_.timestamp))}const ke=new D(S.NFT_CONTRACT,$.NFT_CONTRACT,p);try{const k=await ke.getPokemonStats(r);Ne({hp:Number(k.hp),attack:Number(k.attack),defense:Number(k.defense),speed:Number(k.speed),special:Number(k.special),pokemonType:Number(k.pokemonType)})}catch(k){console.error("Error fetching Pokemon stats:",k)}}catch(p){console.error("Error checking listing status:",p)}})();const d=setInterval(()=>{if(P){const A=Math.floor(Date.now()/1e3),p=P-A;if(p<=0)a("Auction ended");else{const se=Math.floor(p/86400),R=Math.floor(p%(24*60*60)/(60*60)),L=Math.floor(p%(60*60)/60),E=p%60;a(`${se}d ${R}h ${L}m ${E}s`)}}},1e3);return()=>clearInterval(d)},[r,P]);const we=async()=>{if(!(!window.ethereum||!r)){re(!0);try{const d=await new J(window.ethereum).getSigner();await(await new D(S.TRADING_CONTRACT,$.TRADING_CONTRACT,d).cancelFixedPriceListing(r)).wait(),x("Listing cancelled successfully"),v("success"),N(!0),oe(!0)}catch(t){console.error("Error cancelling listing:",t),x("Error cancelling listing"),v("error"),N(!0)}finally{re(!1)}}},le=()=>{if(F.some(t=>t.id===o))y(o),x("Removed from cart"),v("error"),N(!0);else{if(!r){x("Error: Token ID not found"),v("error"),N(!0);return}T({id:o,image:`https://gateway.pinata.cloud/ipfs/${o}`,name:(n==null?void 0:n.name)||"Pokemon Card NFT",price:f?parseFloat(f):0,quantity:1,tokenId:r}),x("Added to cart"),v("success"),N(!0)}},be=t=>{t.preventDefault(),le(),i(),C()},je=async()=>{if(!(!window.ethereum||!M))try{Y(!0),ce(!0);const d=await new J(window.ethereum).getSigner(),A=new D(S.TRADING_CONTRACT,$.TRADING_CONTRACT,d),p=ye(M),se=await A.listings(r),R=await A.auctions(r);if(R.highestBid===0n){if(p<R.askingPrice)throw new Error(`Bid must be at least ${I(R.askingPrice)} ETH`)}else{const E=R.highestBid*105n/100n;if(p<E)throw new Error(`New bid must be at least 5% higher than current bid (${I(E)} ETH)`)}await(await A.placeBid(r,{value:p})).wait(),q(!0),x("Bid placed successfully!"),v("success"),N(!0)}catch(t){console.error("Error placing bid:",t);let d="Error placing bid: ";t.message.includes("InactiveListing")?d+="This auction is not active":t.message.includes("AuctionHasEnded")?d+="This auction has ended":t.message.includes("NotAnAuction")?d+="This item is not part of an auction":t.message.includes("LowBid")?d+="Bid amount is too low":t.message.includes("insufficient funds")?d+="Insufficient funds in your wallet":t.message.includes("user rejected")?d+="Transaction was rejected":d+="Failed to place bid. Please ensure your bid is at least 5% higher than the current bid",x(d),v("error"),N(!0)}finally{Y(!1),ce(!1)}},de=()=>{q(!1),i(),window.location.reload()},ne=t=>`${t.slice(0,6)}...${t.slice(-4)}`,Ce=t=>new Date(t*1e3).toLocaleString(),ve=async()=>{if(!(!window.ethereum||!r)){G(!0);try{const d=await new J(window.ethereum).getSigner();await(await new D(S.TRADING_CONTRACT,$.TRADING_CONTRACT,d).finalizeAuction(r)).wait(),x("Auction finalized successfully"),v("success"),N(!0),ie(!0)}catch(t){console.error("Error finalizing auction:",t),t.code==="ACTION_REJECTED"||t.code===4001?x("Transaction was cancelled"):x("Error finalizing auction: "+(t.reason||t.message||"Unknown error")),v("error"),N(!0)}finally{G(!1)}}},Ae=()=>{ie(!1),i(),window.location.reload()},ue=()=>{oe(!1),i(),window.location.reload()};return e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"product-details-overlay",onClick:g||O||U?void 0:()=>{i(),te&&window.location.reload()},style:{cursor:g||O||U?"not-allowed":"pointer"},children:e.jsxs("div",{className:"product-details-content",onClick:t=>t.stopPropagation(),children:[U&&e.jsxs("div",{className:"loading-overlay",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Cancelling listing..."})]}),e.jsx("button",{className:"close-button",onClick:i,children:"×"}),e.jsxs("div",{className:"product-details-scroll-container",children:[e.jsx("div",{className:"product-details-main",children:e.jsxs("div",{className:"product-details-grid",children:[e.jsx("div",{className:"product-image",children:e.jsx(he,{hash:o,alt:(n==null?void 0:n.name)||"Pokemon Card"})}),e.jsxs("div",{className:"product-info",children:[e.jsx("h2",{children:(n==null?void 0:n.name)||"Pokemon Card NFT"}),e.jsx("div",{className:"type-badge-container",children:e.jsx("span",{className:`type-badge ${(((pe=n==null?void 0:n.keyvalues)==null?void 0:pe.Type)||"").toLowerCase()}`,children:((me=n==null?void 0:n.keyvalues)==null?void 0:me.Type)||"Type"})}),e.jsxs("div",{className:"product-price",children:[e.jsx("h3",{children:"Price:"}),e.jsxs("span",{children:[f||"Not Listed"," ",f?"ETH":""]})]}),e.jsxs("div",{className:"metadata-section",children:[e.jsx("h3",{children:"Details"}),e.jsxs("div",{className:"metadata-grid",children:[e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"HP"}),e.jsx("span",{children:(h==null?void 0:h.hp)||"Loading..."})]}),e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"Attack"}),e.jsx("span",{children:(h==null?void 0:h.attack)||"Loading..."})]}),e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"Defense"}),e.jsx("span",{children:(h==null?void 0:h.defense)||"Loading..."})]}),e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"Speed"}),e.jsx("span",{children:(h==null?void 0:h.speed)||"Loading..."})]}),e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"Special"}),e.jsx("span",{children:(h==null?void 0:h.special)||"Loading..."})]}),e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"Token ID"}),e.jsx("span",{children:r?`#${r}`:o.slice(0,8)})]}),e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"Owner"}),e.jsx("span",{children:m?ne(m):"Unknown"})]}),e.jsxs("div",{className:"metadata-item",children:[e.jsx("label",{children:"Contract"}),e.jsx("span",{children:ne(S.NFT_CONTRACT)})]})]})]}),e.jsx("div",{className:"action-buttons",children:l||(c==null?void 0:c.toLowerCase())===(m==null?void 0:m.toLowerCase())?e.jsxs(e.Fragment,{children:[e.jsx("button",{className:"cancel-listing-button",onClick:we,disabled:w||U,title:w?"Cannot cancel an active auction":"Cancel listing",children:U?e.jsxs(e.Fragment,{children:[e.jsx("i",{className:"fas fa-spinner fa-spin"}),"Cancelling..."]}):e.jsxs(e.Fragment,{children:[e.jsx("i",{className:"fas fa-times"}),"Cancel Listing"]})}),e.jsxs("button",{className:"view-auction-button",onClick:()=>{const t=document.querySelector(".auction-section");t==null||t.scrollIntoView({behavior:"smooth"})},disabled:!w,children:[e.jsx("i",{className:"fas fa-gavel"}),"View Auction"]})]}):e.jsxs(e.Fragment,{children:[W&&!w&&e.jsxs(e.Fragment,{children:[e.jsx("button",{className:`cart-button ${F.some(t=>t.id===o)?"in-cart":""}`,onClick:le,disabled:w,children:e.jsx("i",{className:"fas fa-shopping-cart"})}),e.jsx("button",{className:"buy-now-button",onClick:be,disabled:w,children:"Buy Now"})]}),w&&e.jsxs("button",{className:"view-auction-button",onClick:()=>{const t=document.querySelector(".auction-section");t==null||t.scrollIntoView({behavior:"smooth"})},disabled:!w,children:[e.jsx("i",{className:"fas fa-gavel"}),"View Auction"]})]})})]})]})}),w&&e.jsxs("div",{className:`auction-section ${w?"active":""}`,children:[e.jsxs("div",{className:"auction-header",children:[e.jsx("h3",{children:"Auction Details"}),e.jsx("span",{className:"auction-countdown",children:X})]}),e.jsxs("div",{className:"auction-content",children:[e.jsxs("div",{className:"current-bids",children:[e.jsx("h4",{children:"Bid History"}),b.length>0?e.jsx("div",{className:"bids-list",children:b.map((t,d)=>e.jsxs("div",{className:"bid-item",children:[e.jsx("span",{className:"bid-address",children:ne(t.bidder)}),e.jsxs("span",{className:"bid-amount",children:[I(t.amount)," ETH"]}),e.jsx("span",{className:"bid-time",children:Ce(t.timestamp)})]},d))}):e.jsx("p",{className:"no-bids",children:"No bids yet"})]}),!l&&P>Math.floor(Date.now()/1e3)&&!te&&e.jsx("div",{className:"place-bid",children:ee?e.jsx("div",{className:"success-popup-overlay",onClick:de,children:e.jsxs("div",{className:"success-popup",onClick:t=>t.stopPropagation(),children:[e.jsx("h3",{children:"Bid Placed Successfully!"}),e.jsx("p",{children:"Your bid has been placed on this NFT."}),e.jsx("button",{className:"ok-button",onClick:de,children:"OK"})]})}):g?e.jsxs("div",{className:"loading-container",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Placing your bid..."})]}):e.jsxs(e.Fragment,{children:[e.jsx("input",{type:"number",value:M,onChange:t=>H(t.target.value),placeholder:"Enter bid amount in ETH",min:"0.1",step:"0.01",disabled:g}),e.jsx("button",{className:"place-bid-button",onClick:je,disabled:!M||Number(M)<=0||g,children:g?"Placing Bid...":"Place Bid"})]})}),P<=Math.floor(Date.now()/1e3)&&(l||(c==null?void 0:c.toLowerCase())===(m==null?void 0:m.toLowerCase()))&&e.jsx("div",{className:"finalize-auction",children:te?e.jsx("div",{className:"success-popup-overlay",children:e.jsxs("div",{className:"success-popup",children:[e.jsx("h3",{children:"Auction Finalized Successfully!"}),e.jsx("p",{children:"The auction has been finalized and assets have been transferred."}),e.jsx("button",{className:"ok-button",onClick:Ae,children:"OK"})]})}):O?e.jsxs("div",{className:"loading-container",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Finalizing auction..."})]}):e.jsx("button",{className:"finalize-auction-button",onClick:ve,disabled:O,children:"Finalize Auction"})})]})]})]})]})}),e.jsx(ge,{message:j,isVisible:B,onHide:()=>N(!1),type:Z}),xe&&e.jsx("div",{className:"success-popup-overlay",onClick:ue,children:e.jsxs("div",{className:"success-popup",onClick:t=>t.stopPropagation(),children:[e.jsx("h3",{children:"Listing Cancelled Successfully!"}),e.jsx("p",{children:"Your NFT listing has been cancelled."}),e.jsx("button",{className:"ok-button",onClick:ue,children:"OK"})]})}),(g||O||U)&&e.jsx("div",{className:"bid-processing-overlay",children:e.jsxs("div",{className:"processing-content",children:[e.jsx("div",{className:"listing-spinner"}),e.jsx("p",{children:g?"Processing your bid...":O?"Finalizing auction...":"Cancelling listing..."})]})})]})}const Be=({onClose:o})=>e.jsx("div",{className:"success-popup-overlay",onClick:o,children:e.jsxs("div",{className:"success-popup",onClick:n=>n.stopPropagation(),children:[e.jsx("h3",{children:"NFT Purchased Successfully!"}),e.jsx("p",{children:"Your NFT has been added to your collection."}),e.jsx("button",{onClick:o,className:"success-ok-button",children:"OK"})]})}),Oe=()=>e.jsx("div",{className:"loading-overlay",children:e.jsxs("div",{className:"loading-content",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Processing your purchase..."})]})});function Re({isOpen:o,onClose:n}){const{cartItems:i,removeFromCart:C,clearCart:f}=Te(),[m,r]=s.useState(!1),[c,T]=s.useState(!1),[F,y]=s.useState(""),[M,H]=s.useState("success"),[W,z]=s.useState(!1),w=i.reduce((a,b)=>a+(b.price||0),0),K=i.length,P=typeof window<"u"&&!!window.ethereum,Q=async()=>{if(!P){y("Please install MetaMask to purchase NFTs"),H("error"),z(!0);return}if(i.length===0){y("Your cart is empty"),H("error"),z(!0);return}try{T(!0);const a=new J(window.ethereum),b=await a.getSigner(),V=new D(S.TRADING_CONTRACT,$.TRADING_CONTRACT,b);for(const l of i)try{if(!l.tokenId)throw new Error(`Token ID not found for NFT: ${l.name}`);const u=await V.listings(l.tokenId),j=new D(S.NFT_CONTRACT,$.NFT_CONTRACT,a),x=S.TRADING_CONTRACT,Z=await b.getAddress();if(console.log("Address verification:",{contractAddress:x,sellerAddress:u.seller,buyerAddress:Z,nftOwner:await j.ownerOf(l.tokenId)}),!u.isActive)throw new Error(`NFT ${l.name} is not actively listed`);if(u.isAuction)throw new Error(`NFT ${l.name} is part of an auction. Please use auction functions instead.`);if((await j.ownerOf(l.tokenId)).toLowerCase()!==S.TRADING_CONTRACT.toLowerCase())throw new Error(`NFT ${l.name} is not owned by the trading contract`);const B=u.price;if(ye(l.price.toString()).toString()!==B.toString())throw new Error(`Price mismatch for NFT ${l.name}. Listed: ${I(B)} ETH, Cart: ${l.price} ETH`);console.log("Payment verification:",{tokenId:l.tokenId,seller:u.seller,price:I(B),priceWei:B.toString(),isActive:u.isActive,isAuction:u.isAuction});const N=await a.getBalance(u.seller),ee=await a.getBalance(x);console.log("Balances before:",{seller:I(N),contract:I(ee)}),console.log(`Purchasing NFT ${l.name} (ID: ${l.tokenId}) for ${I(B)} ETH`);const q=await V.buyCard(l.tokenId,{value:B,gasLimit:3e5});console.log(`Transaction sent: ${q.hash}`);const g=await q.wait(),Y=await a.getBalance(u.seller);console.log("Seller balance after:",I(Y),"ETH"),console.log("Balance change:",I(Y-N),"ETH"),console.log("Transaction receipt:",{hash:g.hash,status:g.status,blockNumber:g.blockNumber,gasUsed:g.gasUsed.toString(),events:g.logs.map(G=>({address:G.address,topics:G.topics,data:G.data}))});const O=await j.ownerOf(l.tokenId);console.log("New NFT owner:",O),console.log(`Transaction confirmed for NFT: ${l.name}`)}catch(u){let j=`Failed to purchase ${l.name}: `;throw u.message.includes("InactiveListing")?j+="NFT is not actively listed":u.message.includes("UseAuctionFunctions")?j+="NFT is part of an auction":u.message.includes("InsufficientPayment")?j+="Insufficient payment amount":u.message.includes("Contract doesn't own the NFT")?j+="NFT is no longer available":j+=u.message,new Error(j)}console.log("All NFTs purchased successfully"),r(!0),f()}catch(a){console.error("Error purchasing NFTs:",a);let b="";a.code==="INSUFFICIENT_FUNDS"?b="Insufficient funds to complete the purchase":a.code==="ACTION_REJECTED"||a.message.includes("user rejected")||a.message.includes("User rejected")||a.message.includes("User denied")?b="Transaction was cancelled by user":b=a.message||"Failed to complete purchase",y(b),H("error"),z(!0)}finally{T(!1)}},X=()=>{r(!1),n(),window.location.reload()};return e.jsxs(e.Fragment,{children:[c&&e.jsx(Oe,{}),m&&e.jsx(Be,{onClose:X}),o&&e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"cart-overlay",onClick:n}),e.jsxs("div",{className:`cart-panel ${o?"open":""}`,children:[e.jsxs("div",{className:"cart-header",children:[e.jsx("h2",{children:"Shopping Cart"}),e.jsx("button",{className:"close-button",onClick:n,children:e.jsx("i",{className:"fas fa-times"})})]}),e.jsx("div",{className:"cart-items",children:i.length===0?e.jsxs("div",{className:"empty-cart",children:[e.jsx("i",{className:"fas fa-shopping-cart"}),e.jsx("p",{children:"Your cart is empty"})]}):e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"cart-subheader",children:[e.jsxs("span",{className:"item-count",children:[K," ",K===1?"Item":"Items"]}),e.jsx("button",{className:"clear-cart-button",onClick:f,children:"Clear All"})]}),i.map(a=>e.jsxs("div",{className:"cart-item",children:[e.jsx("div",{className:"item-image",children:e.jsx(he,{hash:a.id,alt:a.name})}),e.jsxs("div",{className:"item-details",children:[e.jsx("h3",{children:a.name}),e.jsxs("p",{children:[a.price||"Not Listed"," ",a.price?"ETH":""]})]}),e.jsx("button",{className:"remove-item",onClick:()=>C(a.id),children:e.jsx("i",{className:"fas fa-times"})})]},a.id))]})}),i.length>0&&!m&&e.jsxs("div",{className:"cart-footer",children:[e.jsxs("div",{className:"cart-total",children:[e.jsx("span",{children:"Total:"}),e.jsxs("span",{children:[w.toFixed(4)," ETH"]})]}),e.jsx("button",{className:"checkout-button",onClick:Q,disabled:c||!P,children:P?c?"Processing...":"Purchase NFTs":"Install MetaMask"})]})]})]}),e.jsx(ge,{message:F,isVisible:W,onHide:()=>z(!1),type:M})]})}const Ue=Object.freeze(Object.defineProperty({__proto__:null,default:Re},Symbol.toStringTag,{value:"Module"}));export{$ as C,Ge as I,$e as P,ge as T,he as a,ze as b,S as c,Ue as d,Te as u};
